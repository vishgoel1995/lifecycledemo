{"version":3,"sources":["AppComponent.js","HomeComponent.js","RouteComponent.js","RefDemoComponent.js","AutoRefDemo.js","index.js"],"names":["App","props","state","time","Date","this","timer","setInterval","setState","prevState","console","log","clearInterval","toLocaleTimeString","to","React","Component","Home","CustomTextInput","textInput","createRef","focusTextInput","bind","current","focus","type","ref","value","onClick","AutoFocusTextInput","ReactDom","render","AutoRefDemo","document","querySelector"],"mappings":"8MA0CeA,E,kDApCX,WAAYC,GAAO,IAAD,8BAEd,cAAMA,IACDC,MAAM,CAACC,KAAK,IAAIC,MAHP,E,qDAMlB,WAAoB,IAAD,OACfC,KAAKC,MAAQC,aAAY,kBAAI,EAAKC,SAAS,CAACL,KAAK,IAAIC,SAAS,O,gCAGlE,SAAmBK,GACZJ,KAAKH,MAAMC,OAAOM,EAAUN,KAC3BO,QAAQC,IAAI,4CAGZD,QAAQC,IAAI,0C,kCAIpB,WACID,QAAQC,IAAI,kCACZC,cAAcP,KAAKC,S,oBAGvB,WACI,OACA,gCACI,mDAAsBD,KAAKH,MAAMC,KAAKU,wBACtC,uBAEA,cAAC,IAAD,CAAMC,GAAG,IAAT,0C,GAhCMC,IAAMC,WCFlBC,E,4JAEN,WACI,OACI,gCACI,gFACA,uBACA,cAAC,IAAD,CAAMH,GAAG,OAAT,mD,GAPOC,IAAMC,WAcVC,I,GCZQF,IAAMC,U,OCgCZE,E,kDA/Bb,WAAYjB,GAAQ,IAAD,8BACjB,cAAMA,IAEDkB,UAAYJ,IAAMK,YACvB,EAAKC,eAAiB,EAAKA,eAAeC,KAApB,gBAJL,E,kDAOnB,WAGEjB,KAAKc,UAAUI,QAAQC,U,oBAGzB,WAGE,OACE,gCACE,uBACEC,KAAK,OACLC,IAAKrB,KAAKc,YACZ,uBACEM,KAAK,SACLE,MAAM,uBACNC,QAASvB,KAAKgB,wB,GAzBIN,IAAMC,WCenBa,E,kDAhBb,WAAY5B,GAAQ,IAAD,8BACjB,cAAMA,IACDkB,UAAYJ,IAAMK,YAFN,E,qDAKnB,WACEf,KAAKc,UAAUI,QAAQF,mB,oBAGzB,WACE,OACE,cAAC,EAAD,CAAiBK,IAAKrB,KAAKc,gB,GAZFJ,IAAMC,WCKvCc,IAASC,OAAO,cAACC,EAAD,IAAeC,SAASC,cAAc,Y","file":"static/js/main.39b49223.chunk.js","sourcesContent":["import React from 'react';\nimport {Link} from 'react-router-dom';\n//import ReactDom from 'react-dom';\n\nclass App extends React.Component{\n\n    constructor(props){\n        //Wy we cant use this before super(props) -- understood\n        super(props);\n        this.state={time:new Date()}\n    }\n\n    componentDidMount(){\n        this.timer = setInterval(()=>this.setState({time:new Date()}),1000);\n    }\n\n    componentDidUpdate(prevState){\n        if(this.state.time!==prevState.time){\n            console.log('Current state is not equal to prev state')\n        }\n        else{\n            console.log('Current state is equal to prev state')\n        }\n    }\n\n    componentWillUnmount(){\n        console.log('ComponentWillUnmount is called')\n        clearInterval(this.timer);\n    }\n\n    render(){\n        return (\n        <div>\n            <h1>The date time is {this.state.time.toLocaleTimeString()}</h1>\n            <br/>\n            \n            <Link to=\"/\">Go To The Home Page!!</Link>\n        </div>\n        )\n    }\n}\n\nexport default App;","import React from 'react';\nimport {Link} from 'react-router-dom';\nclass Home extends React.Component{\n\nrender(){\n    return (\n        <div>\n            <h1>Welcome to the Home page of our Application!!!</h1>\n            <br/>\n            <Link to=\"/App\">Go To App to see the live Date</Link>\n        </div>\n    )\n}\n\n}\n\nexport default Home;","import React from 'react';\nimport {BrowserRouter,Link,Route} from 'react-router-dom';\nimport App from './AppComponent';\nimport Home from './HomeComponent';\nclass RouteCom extends React.Component {\n\n    render(){\n        return (\n            \n            <div>\n                <BrowserRouter>\n                <Route path=\"/\" exact component={Home}></Route>\n                <Route path =\"/App\"  component={App}></Route>\n                \n                </BrowserRouter>\n\n            </div>\n        )\n    }\n\n}\n\nexport default RouteCom;","import React from 'react';\nimport ReactDom from 'react-dom';\n\n\nclass CustomTextInput extends React.Component {\n    constructor(props) {\n      super(props);\n      // create a ref to store the textInput DOM element\n      this.textInput = React.createRef();\n      this.focusTextInput = this.focusTextInput.bind(this);\n    }\n  \n    focusTextInput() {\n      // Explicitly focus the text input using the raw DOM API\n      // Note: we're accessing \"current\" to get the DOM node\n      this.textInput.current.focus();\n    }\n  \n    render() {\n      // tell React that we want to associate the <input> ref\n      // with the `textInput` that we created in the constructor\n      return (\n        <div>\n          <input\n            type=\"text\"\n            ref={this.textInput} />\n          <input\n            type=\"button\"\n            value=\"Focus the text input\"\n            onClick={this.focusTextInput}\n          />\n        </div>\n      );\n    }\n  }\n\n  export default CustomTextInput;","import React from 'react';\nimport CustomTextInput from './RefDemoComponent';\nclass AutoFocusTextInput extends React.Component {\n    constructor(props) {\n      super(props);\n      this.textInput = React.createRef();\n    }\n  \n    componentDidMount() {\n      this.textInput.current.focusTextInput();\n    }\n  \n    render() {\n      return (\n        <CustomTextInput ref={this.textInput} />\n      );\n    }\n  }\n\n  export default AutoFocusTextInput;","import React from 'react';\nimport ReactDom from 'react-dom';\nimport Route from './RouteComponent';\nimport RefDemo from './RefDemoComponent';\nimport AutoRefDemo from './AutoRefDemo';\n\n\nReactDom.render(<AutoRefDemo/>,document.querySelector('#root'))"],"sourceRoot":""}